test_name: Получение промокодов компанией

# Подключение файлов из директории components для переиспользования в тестах
includes:
  - !include components/basic_auth.yml
  - !include components/basic_promo.yml

# Перед этим тестом необходимо создать промокоды с помощью test_04_business_promo_create_valid.tavern.yml

stages:
  - type: ref
    id: basic_auth_reg1

  - type: ref
    id: basic_auth_auth1

  - type: ref
    id: basic_auth_reg2

  - type: ref
    id: basic_auth_auth2

  - name: "Успешное создание промокода [1]"
    id: 04_create1
    request:
      url: "{BASE_URL}/business/promo"
      method: POST
      headers:
        Authorization: "Bearer {company1_token}"
      # Чтобы посмотреть на структуру запроса, смотрите файлы с соответствующим названием в директории components/json
      json: !include components/json/promo1.json
    response:
      status_code: 201
      save:
        json:
          company1_promo1_id: id

  - name: "Успешное создание промокода [2]"
    id: 04_create2
    request:
      url: "{BASE_URL}/business/promo"
      method: POST
      headers:
        Authorization: "Bearer {company1_token}"
      # Чтобы посмотреть на структуру запроса, смотрите файлы с соответствующим названием в директории components/json
      json: !include components/json/promo2.json
    response:
      status_code: 201
      save:
        json:
          company1_promo2_id: id

  - name: "Успешное создание промокода [3]"
    id: 04_create3
    request:
      url: "{BASE_URL}/business/promo"
      method: POST
      headers:
        Authorization: "Bearer {company1_token}"
      # Чтобы посмотреть на структуру запроса, смотрите файлы с соответствующим названием в директории components/json
      json: !include components/json/promo3.json
    response:
      status_code: 201
      save:
        json:
          company1_promo3_id: id

  - name: "Успешное создание промокода [4]"
    id: 04_create4
    request:
      url: "{BASE_URL}/business/promo"
      method: POST
      headers:
        Authorization: "Bearer {company2_token}"
      # Чтобы посмотреть на структуру запроса, смотрите файлы с соответствующим названием в директории components/json
      json: !include components/json/promo4.json
    response:
      status_code: 201
      save:
        json:
          company2_promo1_id: id

  - name: "Получение всего списка промокодов"
    request:
      url: "{BASE_URL}/business/promo"
      method: GET
      headers:
        Authorization: "Bearer {company1_token}"
    response:
      status_code: 200
      json:
      # Проверяем, что вернулись все промокоды компании, отсортированные в порядке убывания даты создания.
        - !include components/json/promo3.json
        - !include components/json/promo2.json
        - !include components/json/promo1.json
      headers:
        X-Total-Count: '3'

  - name: "Получение списка промокодов с пагинацией [1]"
    request:
      url: "{BASE_URL}/business/promo"
      method: GET
      params:
        offset: 1
      headers:
        Authorization: "Bearer {company1_token}"
    response:
      status_code: 200
      json:
        - !include components/json/promo2.json
        - !include components/json/promo1.json
      headers:
        X-Total-Count: '3'

  - name: "Получение списка промокодов с пагинацией [2]"
    request:
      url: "{BASE_URL}/business/promo"
      method: GET
      params:
        offset: 1
        limit: 1
      headers:
        Authorization: "Bearer {company1_token}"
    response:
      status_code: 200
      json:
        - !include components/json/promo2.json
      headers:
        X-Total-Count: '3'

  - name: "Получение списка промокодов с пагинацией [3]"
    request:
      url: "{BASE_URL}/business/promo"
      method: GET
      params:
        offset: 100
      headers:
        Authorization: "Bearer {company1_token}"
    response:
      status_code: 200
      json: []
      headers:
        X-Total-Count: '3'

  - name: "Получение списка промокодов с фильтрами [1]"
    request:
      url: "{BASE_URL}/business/promo"
      method: GET
      params:
        country: ru
      headers:
        Authorization: "Bearer {company1_token}"
    response:
      status_code: 200
      json:
        - !include components/json/promo3.json
        - !include components/json/promo1.json
      headers:
        X-Total-Count: '2'

  - name: "Получение списка промокодов с фильтрами и пагинацией [2]"
    request:
      url: "{BASE_URL}/business/promo"
      method: GET
      params:
        country: ru
        sort_by: active_until
      headers:
        Authorization: "Bearer {company1_token}"
    response:
      status_code: 200
      json:
        - !include components/json/promo1.json
        - !include components/json/promo3.json
      headers:
        X-Total-Count: '2'